// Code generated by go-swagger; DO NOT EDIT.

package vpn

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewVpnTunnelTerminationsListParams creates a new VpnTunnelTerminationsListParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewVpnTunnelTerminationsListParams() *VpnTunnelTerminationsListParams {
	return &VpnTunnelTerminationsListParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewVpnTunnelTerminationsListParamsWithTimeout creates a new VpnTunnelTerminationsListParams object
// with the ability to set a timeout on a request.
func NewVpnTunnelTerminationsListParamsWithTimeout(timeout time.Duration) *VpnTunnelTerminationsListParams {
	return &VpnTunnelTerminationsListParams{
		timeout: timeout,
	}
}

// NewVpnTunnelTerminationsListParamsWithContext creates a new VpnTunnelTerminationsListParams object
// with the ability to set a context for a request.
func NewVpnTunnelTerminationsListParamsWithContext(ctx context.Context) *VpnTunnelTerminationsListParams {
	return &VpnTunnelTerminationsListParams{
		Context: ctx,
	}
}

// NewVpnTunnelTerminationsListParamsWithHTTPClient creates a new VpnTunnelTerminationsListParams object
// with the ability to set a custom HTTPClient for a request.
func NewVpnTunnelTerminationsListParamsWithHTTPClient(client *http.Client) *VpnTunnelTerminationsListParams {
	return &VpnTunnelTerminationsListParams{
		HTTPClient: client,
	}
}

/*
VpnTunnelTerminationsListParams contains all the parameters to send to the API endpoint

	for the vpn tunnel terminations list operation.

	Typically these are written to a http.Request.
*/
type VpnTunnelTerminationsListParams struct {

	// Created.
	Created *string

	// CreatedGt.
	CreatedGt *string

	// CreatedGte.
	CreatedGte *string

	// CreatedLt.
	CreatedLt *string

	// CreatedLte.
	CreatedLte *string

	// Createdn.
	Createdn *string

	// ID.
	ID *string

	// IDGt.
	IDGt *string

	// IDGte.
	IDGte *string

	// IDLt.
	IDLt *string

	// IDLte.
	IDLte *string

	// IDn.
	IDn *string

	// LastUpdated.
	LastUpdated *string

	// LastUpdatedGt.
	LastUpdatedGt *string

	// LastUpdatedGte.
	LastUpdatedGte *string

	// LastUpdatedLt.
	LastUpdatedLt *string

	// LastUpdatedLte.
	LastUpdatedLte *string

	// LastUpdatedn.
	LastUpdatedn *string

	/* Limit.

	   Number of results to return per page.
	*/
	Limit *int64

	/* Offset.

	   The initial index from which to return the results.
	*/
	Offset *int64

	/* Ordering.

	   Which field to use when ordering the results.
	*/
	Ordering *string

	// Q.
	Q *string

	// Tag.
	Tag *string

	// Tagn.
	Tagn *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the vpn tunnel terminations list params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *VpnTunnelTerminationsListParams) WithDefaults() *VpnTunnelTerminationsListParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the vpn tunnel terminations list params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *VpnTunnelTerminationsListParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) WithTimeout(timeout time.Duration) *VpnTunnelTerminationsListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) WithContext(ctx context.Context) *VpnTunnelTerminationsListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) WithHTTPClient(client *http.Client) *VpnTunnelTerminationsListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCreated adds the created to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) WithCreated(created *string) *VpnTunnelTerminationsListParams {
	o.SetCreated(created)
	return o
}

// SetCreated adds the created to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) SetCreated(created *string) {
	o.Created = created
}

// WithCreatedGt adds the createdGt to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) WithCreatedGt(createdGt *string) *VpnTunnelTerminationsListParams {
	o.SetCreatedGt(createdGt)
	return o
}

// SetCreatedGt adds the createdGt to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) SetCreatedGt(createdGt *string) {
	o.CreatedGt = createdGt
}

// WithCreatedGte adds the createdGte to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) WithCreatedGte(createdGte *string) *VpnTunnelTerminationsListParams {
	o.SetCreatedGte(createdGte)
	return o
}

// SetCreatedGte adds the createdGte to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) SetCreatedGte(createdGte *string) {
	o.CreatedGte = createdGte
}

// WithCreatedLt adds the createdLt to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) WithCreatedLt(createdLt *string) *VpnTunnelTerminationsListParams {
	o.SetCreatedLt(createdLt)
	return o
}

// SetCreatedLt adds the createdLt to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) SetCreatedLt(createdLt *string) {
	o.CreatedLt = createdLt
}

// WithCreatedLte adds the createdLte to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) WithCreatedLte(createdLte *string) *VpnTunnelTerminationsListParams {
	o.SetCreatedLte(createdLte)
	return o
}

// SetCreatedLte adds the createdLte to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) SetCreatedLte(createdLte *string) {
	o.CreatedLte = createdLte
}

// WithCreatedn adds the createdn to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) WithCreatedn(createdn *string) *VpnTunnelTerminationsListParams {
	o.SetCreatedn(createdn)
	return o
}

// SetCreatedn adds the createdN to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) SetCreatedn(createdn *string) {
	o.Createdn = createdn
}

// WithID adds the id to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) WithID(id *string) *VpnTunnelTerminationsListParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) SetID(id *string) {
	o.ID = id
}

// WithIDGt adds the iDGt to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) WithIDGt(iDGt *string) *VpnTunnelTerminationsListParams {
	o.SetIDGt(iDGt)
	return o
}

// SetIDGt adds the idGt to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) SetIDGt(iDGt *string) {
	o.IDGt = iDGt
}

// WithIDGte adds the iDGte to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) WithIDGte(iDGte *string) *VpnTunnelTerminationsListParams {
	o.SetIDGte(iDGte)
	return o
}

// SetIDGte adds the idGte to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) SetIDGte(iDGte *string) {
	o.IDGte = iDGte
}

// WithIDLt adds the iDLt to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) WithIDLt(iDLt *string) *VpnTunnelTerminationsListParams {
	o.SetIDLt(iDLt)
	return o
}

// SetIDLt adds the idLt to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) SetIDLt(iDLt *string) {
	o.IDLt = iDLt
}

// WithIDLte adds the iDLte to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) WithIDLte(iDLte *string) *VpnTunnelTerminationsListParams {
	o.SetIDLte(iDLte)
	return o
}

// SetIDLte adds the idLte to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) SetIDLte(iDLte *string) {
	o.IDLte = iDLte
}

// WithIDn adds the iDn to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) WithIDn(iDn *string) *VpnTunnelTerminationsListParams {
	o.SetIDn(iDn)
	return o
}

// SetIDn adds the idN to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) SetIDn(iDn *string) {
	o.IDn = iDn
}

// WithLastUpdated adds the lastUpdated to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) WithLastUpdated(lastUpdated *string) *VpnTunnelTerminationsListParams {
	o.SetLastUpdated(lastUpdated)
	return o
}

// SetLastUpdated adds the lastUpdated to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) SetLastUpdated(lastUpdated *string) {
	o.LastUpdated = lastUpdated
}

// WithLastUpdatedGt adds the lastUpdatedGt to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) WithLastUpdatedGt(lastUpdatedGt *string) *VpnTunnelTerminationsListParams {
	o.SetLastUpdatedGt(lastUpdatedGt)
	return o
}

// SetLastUpdatedGt adds the lastUpdatedGt to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) SetLastUpdatedGt(lastUpdatedGt *string) {
	o.LastUpdatedGt = lastUpdatedGt
}

// WithLastUpdatedGte adds the lastUpdatedGte to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) WithLastUpdatedGte(lastUpdatedGte *string) *VpnTunnelTerminationsListParams {
	o.SetLastUpdatedGte(lastUpdatedGte)
	return o
}

// SetLastUpdatedGte adds the lastUpdatedGte to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) SetLastUpdatedGte(lastUpdatedGte *string) {
	o.LastUpdatedGte = lastUpdatedGte
}

// WithLastUpdatedLt adds the lastUpdatedLt to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) WithLastUpdatedLt(lastUpdatedLt *string) *VpnTunnelTerminationsListParams {
	o.SetLastUpdatedLt(lastUpdatedLt)
	return o
}

// SetLastUpdatedLt adds the lastUpdatedLt to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) SetLastUpdatedLt(lastUpdatedLt *string) {
	o.LastUpdatedLt = lastUpdatedLt
}

// WithLastUpdatedLte adds the lastUpdatedLte to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) WithLastUpdatedLte(lastUpdatedLte *string) *VpnTunnelTerminationsListParams {
	o.SetLastUpdatedLte(lastUpdatedLte)
	return o
}

// SetLastUpdatedLte adds the lastUpdatedLte to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) SetLastUpdatedLte(lastUpdatedLte *string) {
	o.LastUpdatedLte = lastUpdatedLte
}

// WithLastUpdatedn adds the lastUpdatedn to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) WithLastUpdatedn(lastUpdatedn *string) *VpnTunnelTerminationsListParams {
	o.SetLastUpdatedn(lastUpdatedn)
	return o
}

// SetLastUpdatedn adds the lastUpdatedN to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) SetLastUpdatedn(lastUpdatedn *string) {
	o.LastUpdatedn = lastUpdatedn
}

// WithLimit adds the limit to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) WithLimit(limit *int64) *VpnTunnelTerminationsListParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithOffset adds the offset to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) WithOffset(offset *int64) *VpnTunnelTerminationsListParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) SetOffset(offset *int64) {
	o.Offset = offset
}

// WithOrdering adds the ordering to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) WithOrdering(ordering *string) *VpnTunnelTerminationsListParams {
	o.SetOrdering(ordering)
	return o
}

// SetOrdering adds the ordering to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) SetOrdering(ordering *string) {
	o.Ordering = ordering
}

// WithQ adds the q to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) WithQ(q *string) *VpnTunnelTerminationsListParams {
	o.SetQ(q)
	return o
}

// SetQ adds the q to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) SetQ(q *string) {
	o.Q = q
}

// WithTag adds the tag to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) WithTag(tag *string) *VpnTunnelTerminationsListParams {
	o.SetTag(tag)
	return o
}

// SetTag adds the tag to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) SetTag(tag *string) {
	o.Tag = tag
}

// WithTagn adds the tagn to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) WithTagn(tagn *string) *VpnTunnelTerminationsListParams {
	o.SetTagn(tagn)
	return o
}

// SetTagn adds the tagN to the vpn tunnel terminations list params
func (o *VpnTunnelTerminationsListParams) SetTagn(tagn *string) {
	o.Tagn = tagn
}

// WriteToRequest writes these params to a swagger request
func (o *VpnTunnelTerminationsListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Created != nil {

		// query param created
		var qrCreated string

		if o.Created != nil {
			qrCreated = *o.Created
		}
		qCreated := qrCreated
		if qCreated != "" {

			if err := r.SetQueryParam("created", qCreated); err != nil {
				return err
			}
		}
	}

	if o.CreatedGt != nil {

		// query param created__gt
		var qrCreatedGt string

		if o.CreatedGt != nil {
			qrCreatedGt = *o.CreatedGt
		}
		qCreatedGt := qrCreatedGt
		if qCreatedGt != "" {

			if err := r.SetQueryParam("created__gt", qCreatedGt); err != nil {
				return err
			}
		}
	}

	if o.CreatedGte != nil {

		// query param created__gte
		var qrCreatedGte string

		if o.CreatedGte != nil {
			qrCreatedGte = *o.CreatedGte
		}
		qCreatedGte := qrCreatedGte
		if qCreatedGte != "" {

			if err := r.SetQueryParam("created__gte", qCreatedGte); err != nil {
				return err
			}
		}
	}

	if o.CreatedLt != nil {

		// query param created__lt
		var qrCreatedLt string

		if o.CreatedLt != nil {
			qrCreatedLt = *o.CreatedLt
		}
		qCreatedLt := qrCreatedLt
		if qCreatedLt != "" {

			if err := r.SetQueryParam("created__lt", qCreatedLt); err != nil {
				return err
			}
		}
	}

	if o.CreatedLte != nil {

		// query param created__lte
		var qrCreatedLte string

		if o.CreatedLte != nil {
			qrCreatedLte = *o.CreatedLte
		}
		qCreatedLte := qrCreatedLte
		if qCreatedLte != "" {

			if err := r.SetQueryParam("created__lte", qCreatedLte); err != nil {
				return err
			}
		}
	}

	if o.Createdn != nil {

		// query param created__n
		var qrCreatedn string

		if o.Createdn != nil {
			qrCreatedn = *o.Createdn
		}
		qCreatedn := qrCreatedn
		if qCreatedn != "" {

			if err := r.SetQueryParam("created__n", qCreatedn); err != nil {
				return err
			}
		}
	}

	if o.ID != nil {

		// query param id
		var qrID string

		if o.ID != nil {
			qrID = *o.ID
		}
		qID := qrID
		if qID != "" {

			if err := r.SetQueryParam("id", qID); err != nil {
				return err
			}
		}
	}

	if o.IDGt != nil {

		// query param id__gt
		var qrIDGt string

		if o.IDGt != nil {
			qrIDGt = *o.IDGt
		}
		qIDGt := qrIDGt
		if qIDGt != "" {

			if err := r.SetQueryParam("id__gt", qIDGt); err != nil {
				return err
			}
		}
	}

	if o.IDGte != nil {

		// query param id__gte
		var qrIDGte string

		if o.IDGte != nil {
			qrIDGte = *o.IDGte
		}
		qIDGte := qrIDGte
		if qIDGte != "" {

			if err := r.SetQueryParam("id__gte", qIDGte); err != nil {
				return err
			}
		}
	}

	if o.IDLt != nil {

		// query param id__lt
		var qrIDLt string

		if o.IDLt != nil {
			qrIDLt = *o.IDLt
		}
		qIDLt := qrIDLt
		if qIDLt != "" {

			if err := r.SetQueryParam("id__lt", qIDLt); err != nil {
				return err
			}
		}
	}

	if o.IDLte != nil {

		// query param id__lte
		var qrIDLte string

		if o.IDLte != nil {
			qrIDLte = *o.IDLte
		}
		qIDLte := qrIDLte
		if qIDLte != "" {

			if err := r.SetQueryParam("id__lte", qIDLte); err != nil {
				return err
			}
		}
	}

	if o.IDn != nil {

		// query param id__n
		var qrIDn string

		if o.IDn != nil {
			qrIDn = *o.IDn
		}
		qIDn := qrIDn
		if qIDn != "" {

			if err := r.SetQueryParam("id__n", qIDn); err != nil {
				return err
			}
		}
	}

	if o.LastUpdated != nil {

		// query param last_updated
		var qrLastUpdated string

		if o.LastUpdated != nil {
			qrLastUpdated = *o.LastUpdated
		}
		qLastUpdated := qrLastUpdated
		if qLastUpdated != "" {

			if err := r.SetQueryParam("last_updated", qLastUpdated); err != nil {
				return err
			}
		}
	}

	if o.LastUpdatedGt != nil {

		// query param last_updated__gt
		var qrLastUpdatedGt string

		if o.LastUpdatedGt != nil {
			qrLastUpdatedGt = *o.LastUpdatedGt
		}
		qLastUpdatedGt := qrLastUpdatedGt
		if qLastUpdatedGt != "" {

			if err := r.SetQueryParam("last_updated__gt", qLastUpdatedGt); err != nil {
				return err
			}
		}
	}

	if o.LastUpdatedGte != nil {

		// query param last_updated__gte
		var qrLastUpdatedGte string

		if o.LastUpdatedGte != nil {
			qrLastUpdatedGte = *o.LastUpdatedGte
		}
		qLastUpdatedGte := qrLastUpdatedGte
		if qLastUpdatedGte != "" {

			if err := r.SetQueryParam("last_updated__gte", qLastUpdatedGte); err != nil {
				return err
			}
		}
	}

	if o.LastUpdatedLt != nil {

		// query param last_updated__lt
		var qrLastUpdatedLt string

		if o.LastUpdatedLt != nil {
			qrLastUpdatedLt = *o.LastUpdatedLt
		}
		qLastUpdatedLt := qrLastUpdatedLt
		if qLastUpdatedLt != "" {

			if err := r.SetQueryParam("last_updated__lt", qLastUpdatedLt); err != nil {
				return err
			}
		}
	}

	if o.LastUpdatedLte != nil {

		// query param last_updated__lte
		var qrLastUpdatedLte string

		if o.LastUpdatedLte != nil {
			qrLastUpdatedLte = *o.LastUpdatedLte
		}
		qLastUpdatedLte := qrLastUpdatedLte
		if qLastUpdatedLte != "" {

			if err := r.SetQueryParam("last_updated__lte", qLastUpdatedLte); err != nil {
				return err
			}
		}
	}

	if o.LastUpdatedn != nil {

		// query param last_updated__n
		var qrLastUpdatedn string

		if o.LastUpdatedn != nil {
			qrLastUpdatedn = *o.LastUpdatedn
		}
		qLastUpdatedn := qrLastUpdatedn
		if qLastUpdatedn != "" {

			if err := r.SetQueryParam("last_updated__n", qLastUpdatedn); err != nil {
				return err
			}
		}
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int64

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	if o.Offset != nil {

		// query param offset
		var qrOffset int64

		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := swag.FormatInt64(qrOffset)
		if qOffset != "" {

			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}
	}

	if o.Ordering != nil {

		// query param ordering
		var qrOrdering string

		if o.Ordering != nil {
			qrOrdering = *o.Ordering
		}
		qOrdering := qrOrdering
		if qOrdering != "" {

			if err := r.SetQueryParam("ordering", qOrdering); err != nil {
				return err
			}
		}
	}

	if o.Q != nil {

		// query param q
		var qrQ string

		if o.Q != nil {
			qrQ = *o.Q
		}
		qQ := qrQ
		if qQ != "" {

			if err := r.SetQueryParam("q", qQ); err != nil {
				return err
			}
		}
	}

	if o.Tag != nil {

		// query param tag
		var qrTag string

		if o.Tag != nil {
			qrTag = *o.Tag
		}
		qTag := qrTag
		if qTag != "" {

			if err := r.SetQueryParam("tag", qTag); err != nil {
				return err
			}
		}
	}

	if o.Tagn != nil {

		// query param tag__n
		var qrTagn string

		if o.Tagn != nil {
			qrTagn = *o.Tagn
		}
		qTagn := qrTagn
		if qTagn != "" {

			if err := r.SetQueryParam("tag__n", qTagn); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
